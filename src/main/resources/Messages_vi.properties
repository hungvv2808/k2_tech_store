javax.faces.validator.LengthValidator.MINIMUM = \u00cdt nh\u1ea5t ph\u1ea3i nh\u1eadp d\u1eef li\u1ec7u c\u00f3 \u0111\u1ed9 d\u00e0i l\u00e0 ''{0}''.
javax.faces.validator.LongRangeValidator.MINIMUM= Gi\u00e1 tr\u1ecb th\u1ea5p nh\u1ea5t cho ph\u00e9p l\u00e0 ''{0}''.
javax.faces.validator.LongRangeValidator.NOT_IN_RANGE=Gi\u00e1 tr\u1ecb c\u1ea7n n\u1eb1m gi\u1eefa {0} va\u0300 {1}.
javax.faces.validator.DoubleRangeValidator.MINIMUM = Gi\u00e1 tr\u1ecb th\u1ea5p nh\u1ea5t cho ph\u00e9p l\u00e0 ''{0}''.
javax.faces.component.UIInput.REQUIRED = H\u00e3y nh\u1eadp gi\u00e1 tr\u1ecb cho {0}.
javax.faces.validator.RegexValidator.NOT_MATCHED = Sai \u0111\u1ecbnh d\u1ea1ng. D\u1eef li\u1ec7u c\u1ea7n ph\u1ea3i theo d\u1ea1ng ''{0}''
javax.faces.validator.RegexValidator.PATTERN_NOT_SET = Ch\u01b0a x\u00e1c \u0111\u1ecbnh m\u1eabu d\u1eef li\u1ec7u
javax.faces.validator.RegexValidator.MATCH_EXCEPTION = M\u1eabu d\u1eef li\u1ec7u kh\u00f4ng tu\u00e2n theo c\u00fa ph\u00e1p c\u1ee7a bi\u1ec3u th\u1ee9c ch\u00ednh qui

javax.faces.converter.IntegerConverter.INTEGER=''{0}'' ph\u1ea3i la\u0300 m\u1ed9t s\u1ed1
javax.faces.converter.LongConverter.LONG=''{0}'' ph\u1ea3i la\u0300 m\u1ed9t s\u1ed1

javax.faces.validator.LengthValidator.MAXIMUM=\u0110\u1ed9 d\u00e0i c\u1ee7a {1} kh\u00f4ng \u0111\u01b0\u1ee3c v\u01b0\u1ee3t qu\u00e1 {0} k\u00fd t\u1ef1
javax.faces.converter.DoubleConverter.DOUBLE={2} ph\u1ea3i l\u00e0 m\u1ed9t s\u1ed1
javax.faces.converter.DoubleConverter.DOUBLE_detail={2} ph\u1ea3i l\u00e0 m\u1ed9t s\u1ed1
javax.faces.validator.PhoneValidator.LENGTH           = S\u1ed1 thu\u00ea bao c\u00f3 \u0111\u1ed9 d\u00e0i t\u1eeb 10 \u0111\u1ebfn 15 ch\u1eef s\u1ed1 (k\u1ec3 c\u1ea3 s\u1ed1 0)
javax.faces.validator.MSISDNValidator.LENGTH          = S\u1ed1 thu\u00ea bao c\u00f3 \u0111\u1ed9 d\u00e0i t\u1ed1i \u0111a 15 ch\u1eef s\u1ed1 (k\u1ec3 c\u1ea3 s\u1ed1 0)
javax.faces.validator.PhoneValidator.NUMERIC          = S\u1ed1 thu\u00ea bao ch\u1ec9 bao g\u1ed3m c\u00e1c ch\u1eef s\u1ed1
javax.faces.validator.PhoneValidator.START            = S\u1ed1 thu\u00ea bao ph\u1ea3i b\u1eaft \u0111\u1ea7u b\u1eb1ng s\u1ed1 0
javax.faces.converter.DateTimeConverter.DATE          = {2} kh\u00f4ng \u0111\u00fang \u0111\u1ecbnh d\u1ea1ng
javax.faces.converter.DateTimeConverter.DATE_detail   = {2} kh\u00f4ng \u0111\u00fang \u0111\u1ecbnh d\u1ea1ng
javax.faces.converter.DateTimeConverter.DATETIME={2} kh\u00F4ng \u0111\u00FAng \u0111\u1ECBnh d\u1EA1ng dd/MM/yyyy HH:mm
javax.faces.converter.DateTimeConverter.DATETIME_detail={2} kh\u00F4ng \u0111\u00FAng \u0111\u1ECBnh d\u1EA1ng dd/MM/yyyy HH:mm
javax.faces.converter.FullDateTimeConverter=Nh\u1eadp kh\u00f4ng \u0111\u00fang \u0111\u1ecbnh d\u1ea1ng dd/MM/yyyy HH:mm:ss
javax.faces.converter.NumberConverter.NUMBER={2}: ''{0}'' kh\u00f4ng ph\u1ea3i l\u00e0 s\u1ed1.
javax.faces.converter.NumberConverter.NUMBER_detail={2}: ''{0}'' kh\u00f4ng ph\u1ea3i l\u00e0 s\u1ed1. VD: {1}
javax.faces.converter.NumberConverter.PATTERN={2}: ''{0}'' kh\u00f4ng \u0111\u00fang \u0111\u1ecbnh d\u1ea1ng s\u1ed1.
javax.faces.converter.NumberConverter.PATTERN_detail={2}: ''{0}'' kh\u00f4ng \u0111\u00fang \u0111\u1ecbnh d\u1ea1ng s\u1ed1. VD: {1}

SerialValidator.LENGTH=S\u1ed1 SIM l\u00e0 t\u00f9 19 \u0111\u1ebfn 20 k\u00fd t\u1ef1
common.only.NUMERIC=Ch\u1ec9 \u0111\u01b0\u1ee3c ph\u00e9p nh\u1eadp ch\u1eef s\u1ed1
common.minute.valid=Ph\u00fat h\u1ee3p l\u1ec7 t\u1eeb 0 \u0111\u1ebfn 59 ph\u00fat
common.hour.valid=Gi\u1edd h\u1ee3p l\u1ec7 t\u1eeb 0 \u0111\u1ebfn 23 gi\u1edd
common.idcard.valid=Ch\u1ec9 \u0111\u01b0\u1ee3c nh\u1eadp 9 \u0111\u1ebfn 15 k\u00ed t\u1ef1 ch\u1eef in hoa v\u00e0 s\u1ed1
common.process.age.valid=Tu\u1ed5i h\u1ee3p l\u1ec7 l\u00e0 t\u1eeb 14 \u0111\u1ebfn 100 tu\u1ed5i
common.past.date.valid=Ng\u00e0y h\u1ee3p l\u1ec7 ph\u1ea3i tr\u01b0\u1edbc ho\u1eb7c b\u1eb1ng ng\u00e0y hi\u1ec7n t\u1ea1i